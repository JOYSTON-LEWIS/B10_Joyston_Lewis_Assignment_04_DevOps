name: Deploy MERN App to EC2

on:
  push:
    branches:
      - Backend
      - Frontend

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout GitHub Repository
      uses: actions/checkout@v3

    - name: Set up SSH Key
      run: |
        echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > private_key.pem
        chmod 600 private_key.pem

    - name: SSH and Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_PRIVATE_IP }} << 'EOF'
          set -e

          echo "üîß Installing required software..."
          sudo apt update
          command -v git || sudo apt install -y git
          command -v nginx || sudo apt install -y nginx
          if ! command -v node || [[ "$(node -v)" != v20* ]]; then
            curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
            sudo apt install -y nodejs
          fi
          command -v docker || curl -fsSL https://get.docker.com | sh

          echo "üóÇ Creating project directories..."
          mkdir -p ~/Backend ~/Frontend

          ##########################################
          ## üõ† BACKEND DEPLOYMENT (PRIORITY FIRST)
          ##########################################

          echo "üì¶ Cloning Backend Repo..."
          cd ~/Backend
          rm -rf B10_Joyston_Lewis_Assignment_04_DevOps
          git clone https://github.com/JOYSTON-LEWIS/B10_Joyston_Lewis_Assignment_04_DevOps
          cd B10_Joyston_Lewis_Assignment_04_DevOps
          git checkout Backend

          echo "üõë Stopping old Backend container..."
          docker stop ${{ secrets.EC2_DOCKER_BACKEND_CONTAINER_NAME }} || true
          docker rm ${{ secrets.EC2_DOCKER_BACKEND_CONTAINER_NAME }} || true

          echo "üìÑ Creating Backend Dockerfile..."
          cat <<BACKENDEOF > Dockerfile
FROM node:20-alpine
WORKDIR /app
COPY package*.json ./
RUN npm install --omit=dev
COPY . .
ENV PORT=3001
ENV MONGO_URI=${{ secrets.MONGO_DB_CLUSTER_SECRET_KEY }}
EXPOSE 3001
CMD ["node", "index.js"]
BACKENDEOF

          echo "üê≥ Building and running Backend container..."
          docker build -t backend-app .
          docker run -d --name ${{ secrets.EC2_DOCKER_BACKEND_CONTAINER_NAME }} -p 3001:3001 backend-app

          ##########################################
          ## üßë‚Äçüé® FRONTEND DEPLOYMENT (AFTER BACKEND)
          ##########################################

          echo "üì¶ Cloning Frontend Repo..."
          cd ~/Frontend
          rm -rf B10_Joyston_Lewis_Assignment_04_DevOps
          git clone https://github.com/JOYSTON-LEWIS/B10_Joyston_Lewis_Assignment_04_DevOps
          cd B10_Joyston_Lewis_Assignment_04_DevOps
          git checkout Frontend

          echo "üõë Stopping old Frontend container..."
          docker stop ${{ secrets.EC2_DOCKER_FRONTEND_CONTAINER_NAME }} || true
          docker rm ${{ secrets.EC2_DOCKER_FRONTEND_CONTAINER_NAME }} || true

          echo "üåç Creating .env file for Frontend..."
          echo "VITE_API_BASE_URL=http://${{ secrets.EC2_PRIVATE_IP }}:3001" > .env
          echo "‚úÖ .env created."

          echo "üìÑ Creating Frontend Dockerfile..."
          cat <<FRONTENDEOF > Dockerfile
FROM node:20
WORKDIR /app
COPY . .
RUN npm install
EXPOSE 3000
CMD ["npm", "run", "dev", "--", "--port", "3000", "--host"]
FRONTENDEOF

          echo "üê≥ Building and running Frontend container..."
          docker build -t frontend-app .
          docker run -d --name ${{ secrets.EC2_DOCKER_FRONTEND_CONTAINER_NAME }} -p 3000:3000 frontend-app

          echo "‚úÖ Deployment complete."

        EOF
